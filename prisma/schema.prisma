generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Client {
  id        Int      @id @default(autoincrement())
  cpf       String   @unique
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  works     Work[]
}

model Funcionary {
  id          Int          @id @default(autoincrement())
  cpf         String       @unique
  name        String
  email       String       @unique
  password    String
  phone       String       @unique
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  workId      Int?
  work        Work?        @relation(fields: [workId], references: [id])
  equipaments Equipament[]
  role        roleFuncionary @default(USER)
}

model Work {
  id            Int          @id @default(autoincrement())
  ownerCpf      String
  owner         Client         @relation(fields: [ownerCpf], references: [cpf])
  title         String
  description   String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  functionaries Funcionary[]
  equipaments   Equipament[]
}

model Supplier {
  id          Int          @id @default(autoincrement())
  cnpj        String       @unique
  name        String
  email       String       @unique
  phone       String
  address     String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  equipaments Equipament[]
}

model Equipament {
  id            Int              @id @default(autoincrement())
  name          String
  description   String
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  supplierId    Int?
  supplier      Supplier?        @relation(fields: [supplierId], references: [id])
  functionaryId Int?
  functionary   Funcionary?      @relation(fields: [functionaryId], references: [id])
  workId        Int?
  work          Work?            @relation(fields: [workId], references: [id])
  type          TypeEquipament
  status        statusEquipament
}

enum TypeEquipament {
  MAQUINA
  VEICULO
  EPI
  OUTROS
}

enum statusEquipament {
  DISPONIVEL
  EM_USO
  MANUTENCAO
  PERDIDO
}

enum roleFuncionary {
  ADMIN
  USER
}