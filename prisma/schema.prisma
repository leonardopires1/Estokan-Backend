generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  cpf       String   @unique
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  works     Work[]
}

model Funcionary {
  id        Int      @id @default(autoincrement())
  cpf       String   @unique
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  workId    Int?
  work      Work?    @relation(fields: [workId], references: [id])
  equipaments equipament[]
}

model Work {
  id            Int          @id @default(autoincrement())
  ownerCpf     String
  owner         User         @relation(fields: [ownerCpf], references: [cpf])
  title         String
  description   String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  functionaries Funcionary[]
  equipaments   equipament[]
}

model Supplier {
  id        Int      @id @default(autoincrement())
  cnpj      String   @unique
  name      String
  email     String   @unique
  password  String
  location  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  equipaments equipament[]
}

model equipament {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  supplierId  Int?
  supplier    Supplier? @relation(fields: [supplierId], references: [id])
  functionaryId Int?
  functionary Funcionary? @relation(fields: [functionaryId], references: [id])
  workId      Int?
  work        Work?    @relation(fields: [workId], references: [id])
}
